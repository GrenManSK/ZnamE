updateapp: str = str(
    "import argparse, shutil, subprocess, yaml, sys\nfrom time import sleep\nUNSPECIFIED = object()\nglobal parser\nparser = argparse.ArgumentParser()\nparser.add_argument('-ef', '--endf', help='Will not automatically end program', default=UNSPECIFIED, nargs='?')\nparser.add_argument('input', help='Input folder', nargs='?')\nargs = parser.parse_args()\nconfig = yaml.safe_load(open('config.yml', 'r'))\nif args.input != \"\":\n    shutil.rmtree('old')\n    if args.endf is None:\n        subprocess.call(sys.executable + ' edupage.py -endf -update', shell=True)\n    else:\n        subprocess.call(sys.executable + ' edupage.py -update', shell=True)\n    sys.exit(0)"
)
codeapp: str = str(
    'import sys\nPLOCHA = [["a", "b", "c", "d", "e"], ["f", "g", "h", "i", "j"], [\n    "k", "l", "m", "n", "o", ], ["p", "q", "r", "s", "t"], [\n    "u", "v", "w", "x", "y"], ["A", "B", "C", "D", "E"], [\n    "F", "G", "H", "I", "J"], ["K", "L", "M", "N", "O", ], [\n    "P", "Q", "R", "S", "T"], ["U", "V", "W", "X", "y"], [\n    "z", " ", ",", ".", ":"], ["!", "?", "\'", \'"\', "`"], [\n    "1", "2", "3", "4", "5"], ["6", "7", "8", "9", "0"], [\n    "\\n", "<", ">", ";", "/"], ["\\\\", "{", "}", "(", ")"],[\n    "[","]","|","-","_"],["=","+","@","#","$"],["%","^","&","*","~"]]\ndef read_file(file):\n    obsah = ""\n    obsah_list = []\n    for i in file:\n        obsah = ""\n        obsah += i\n        for i in obsah:\n            i.lower()\n            obsah_list.append(i)\n    return obsah_list\ndef encode(obsah):\n    sifra = []\n    for i in obsah:\n        riadok = 0\n        stlpec = 0\n        while True:\n            if riadok == 19 and stlpec == 0:\n                break\n            if i == PLOCHA[riadok][stlpec]:\n                sifra.append(str(riadok) + " " + str(stlpec))\n                break\n            if stlpec == 4:\n                riadok += 1\n                stlpec = 0\n            else:\n                stlpec += 1\n    return sifra\ndef output_file(file, name):\n    y = []\n    x = open(name + "crypted", "w")\n    for i in file:\n        y.append(i)\n    x.write(str(y))\n    x.close\n    return\ndef main():\n    name = sys.argv[1]\n    open_file = open(name, "r")\n    open_file.close\n    output_file(encode(read_file(open_file)), name)\nmain()\nx=open(\'DONE\',\'x\')\nx.close()'
)
decodeapp: str = str(
    'import os\nos.system(\'Title \' + \'code\')\nimport sys\nPLOCHA = [["a", "b", "c", "d", "e"], ["f", "g", "h", "i", "j"], [\n    "k", "l", "m", "n", "o", ], ["p", "q", "r", "s", "t"], [\n    "u", "v", "w", "x", "y"], ["A", "B", "C", "D", "E"], [\n    "F", "G", "H", "I", "J"], ["K", "L", "M", "N", "O", ], [\n    "P", "Q", "R", "S", "T"], ["U", "V", "W", "X", "y"], [\n    "z", " ", ",", ".", ":"], ["!", "?", "\'", \'"\', "`"], [\n    "1", "2", "3", "4", "5"], ["6", "7", "8", "9", "0"], [\n    "\\n", "<", ">", ";", "/"], ["\\\\", "{", "}", "(", ")"],[\n    "[","]","|","-","_"],["=","+","@","#","$"],["%","^","&","*","~"]]\ndef read_file(file):\n    obsah = ""\n    obsah_list = []\n    for i in file:\n        obsah += i\n        for i in obsah:\n            obsah_list.append(i)\n    return obsah_list\ndef decode(obsah):\n    done = ""\n    sifra = []\n    for i in obsah:\n        done += str(i)\n        if i == "[" or i == "\'" or i == "," or i == "]":\n            done = ""\n            continue\n        if i == " ":\n            sifra.append(i)\n        else:\n            sifra.append(i)\n    return sifra\ndef real_decode(obsah):\n    cislo = 0\n    pokracovanie = False\n    done = ""\n    vysledok = []\n    for i in obsah:\n        done += str(i)\n        cislo = 0\n        for i in done:\n            cislo += 1\n        if i == " ":\n            done = ""\n            continue\n        if pokracovanie and done.isnumeric() and cislo == 1:\n            stlpec = int(done)\n            vysledok.append(PLOCHA[riadok][stlpec])\n            pokracovanie = False\n            done = ""\n            continue\n        if not pokracovanie or cislo == 2:\n            pokracovanie = True\n            riadok = int(done)\n            continue\n    return vysledok\ndef to_text(obsah):\n    text = ""\n    for i in obsah:\n        if i == ".":\n            text += i + "\\n"\n            continue\n        text += i\n    return text\ndef create_file(obsah, name):\n    x = open(sys.argv[1], "w")\n    x.write(obsah)\n    x.close\n    return\ndef main():\n    if sys.argv[2] == \'False\':\n        name = \'data\'\n    else:\n        name = sys.argv[2]\n    open_file = open(name, "r")\n    code = list(decode(read_file(open_file)))\n    create_file(to_text(real_decode(code)), name)\nmain()\nx=open(\'DONE\',\'x\')\nx.close()'
)
findapp: str = str(
    "import sys\ndecodename=str(sys.argv[1])\nicofind=int(sys.argv[2])\ndn=open(decodename,'r')\ndnr=dn.read()\nbracket,brackethist=0,0\nico=[]\nicocurrent=''\nicoend=False\nrnii=False\nrniiend=False\nsubject=''\nik=False\nuserdef=False\nwh=False\npassword=''\npassend=False\nfor i in dnr:\n    if rnii:\n        wh=True\n        if i=='[':\n            bracket+=1\n        elif i==']':\n            bracket-=1\n        if passend:\n            user.write(password+'\\n')\n            passend=False\n        if ik:\n            if i!=\",\" and bracket==4 and brackethist==4:\n                user.write(i)\n            if bracket==3:\n                subject=''\n                ik=False\n                rniiend=False\n                user.write(\"\\n\")\n        if rniiend:\n            user.write(subject)\n            ik=True\n            rniiend=False\n            brackethist=bracket\n            continue\n        if userdef:\n            userdef=False\n            user=open(str(ico[0]),'w')\n        if bracket==3 and brackethist==3 and i!=\"'\":\n            if i ==',':\n                rniiend=True\n                continue\n            subject+=str(i)\n        elif bracket==5 and brackethist==5 and i!=\"'\":\n            if i ==',':\n                passend=True\n                continue\n            password+=str(i)\n        brackethist=bracket\n        if bracket<2 and brackethist<2:\n            break\n    else:\n        if i=='[':\n            bracket+=1\n        elif i==']':\n            bracket-=1\n        if icoend:\n            if icocurrent!='':\n                if int(icocurrent)==icofind:\n                    ico.append(icocurrent)\n                    rnii=True\n                    continue\n                icocurrent=''\n                icoend=False\n        if bracket==2 and brackethist==2:\n            if i ==',':\n                icoend=True\n                userdef=True\n                continue\n            icocurrent+=i\n        brackethist=bracket\nif not wh:\n    user=open(sys.argv[2], 'x')\nuser.close()\nx=open('DONE','x')\nx.close()"
)
passwordapp: str = str(
    "import sys\ndecodename=str(sys.argv[1])\ndn=open(decodename,'r')\ndnr=dn.readlines()\ntry:\n    number=int(dnr[0])\n    number=str(dnr[0])\n    number=dnr[0][:6]\nexcept Exception:\n    number=None\nx=open('DONE','w')\nx.write(number)\nx.close()"
)
addapp: str = str(
    "import sys\ndecodename=str(sys.argv[1])\nicofind=int(sys.argv[2])\nsubjectfind = sys.argv[3]\nmarkadd = sys.argv[4]\ndn=open(decodename,'r')\ndnr=dn.read()\nbracket,brackethist=0,0\nico=[]\nicocurrent=''\nicoend=False\nrnii=False\nrniiend=False\nsubject=''\nik=False\nuserdef=False\nwh=False\npassword=''\npassend=False\nik2=False\nadd=False\nuser=open('data1','w', newline='')\nfor i in dnr:\n    user.write(i)\n    if rnii:\n        wh=True\n        if i=='[':\n            bracket+=1\n        elif i==']':\n            bracket-=1\n        if add and subject==subjectfind and bracket==4 and brackethist==4:\n            subjectfind=None\n            user.write(str(markadd) + ',')\n            add=False\n        if passend:\n            passend=False\n        if ik:\n            if ik2:\n                ik2=False\n                add=True\n            if bracket==3:\n                subject=''\n                ik=False\n                rniiend=False\n        if rniiend:\n            ik=True\n            ik2=True\n            rniiend=False\n            brackethist=bracket\n            continue\n        if userdef:\n            userdef=False\n        if bracket==3 and brackethist==3 and i!=\"'\":\n            if i ==',':\n                rniiend=True\n                continue\n            subject+=str(i)\n        elif bracket==5 and brackethist==5 and i!=\"'\":\n            if i ==',':\n                passend=True\n                continue\n            password+=str(i)\n        brackethist=bracket\n    else:\n        if i=='[':\n            bracket+=1\n        elif i==']':\n            bracket-=1\n        if icoend:\n            if icocurrent!='':\n                if int(icocurrent)==icofind:\n                    ico.append(icocurrent)\n                    rnii=True\n                    continue\n                icocurrent=''\n                icoend=False\n        if bracket==2 and brackethist==2:\n            if i ==',':\n                icoend=True\n                userdef=True\n                continue\n            icocurrent+=i\n        brackethist=bracket\nif not wh:\n    user=open(sys.argv[2], 'x')\nuser.close()\nx=open('DONE','x')\nx.close()"
)
restartapp: str = str(
    "import argparse, time, pygetwindow\nimport pyautogui as pg\nUNSPECIFIED = object()\nparser = argparse.ArgumentParser()\nparser.add_argument('-al','--autol', choices=[], default=UNSPECIFIED, nargs='?')\nargs = parser.parse_args()\nwindow = pygetwindow.getWindowsWithTitle('ZnÃ¡mE')[0]\nwindow.activate()\nif args.autol is None:\n    time.sleep(1)\n    pg.write(\"login\\n\")\n    time.sleep(1)\n    pg.write(\"y\\n\")"
)
gameapp: str = str("from game_assets_offline import game\ngame()")
